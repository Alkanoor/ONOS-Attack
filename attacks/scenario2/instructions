Prérequis théorique : -un équipement relié à un switch du réseau

Prérequis pratique : aucun


Depuis mininet :

sudo ./general_topology.py
    h5 python scenario2/lldp_exploit.py 1 h5-eth0 &
    h5 python scenario2/lldp_exploit.py 4 h5-eth0 &
    h2 ping h11
    h2 ping h9


Depuis le contrôleur :

wireshark (filtrer avec "tcp.port == 6633 && openflow_v4 && (openflow_v4.type == OFPT_PACKET_IN || openflow_v4.type == OFPT_PACKET_OUT)")


Depuis l'extérieur :

Observer ce qui se passe au niveau de la représentation du réseau à l'adresse http://[adresse IP du contrôleur]:8181/onos/ui/index.html#/topo


On observe alors la création de 2 nouveaux liens virtuels entre s1 et s2 et entre s2 et s4 qui n'existent pas dans la pratique. Cela aboutit à l'impossibilité pour h2 de ping h11 puisque le chemin le plus court passe par le faux lien qui n'existe pas. Le ping entre h2 et h9 est en revanche toujours possible car le chemin le plus court reliant les 2 switchs ne passe pas par notre faux lien.

Conclusion :
L'attaque est complexe à arrêter dans le cas d'un équipement malveillant directement présent sur le réseau. En effet, même si le contrôleur rajoute un champ signé dans les paquets LLDP qu'il envoie (afin de ne considérer à la réception que ceux dont il est à l'origine), si notre équipement malveillant arrive à récupérer le paquet, il peut le rejouer en broadcast et ainsi effectuer l'attaque, même si il ne peut plus réellement choisir les switchs à cibler.
